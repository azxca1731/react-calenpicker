// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Month render custom css render well with snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Date
    cssObject={
      Object {
        "color": "red",
      }
    }
    dayNumber={1}
    handlers={
      Object {
        "handleDateClick": [Function],
      }
    }
    indicatorType="date"
    isInPeriod={false}
    isInThisMonth={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <ForwardRef
        dayNumber={1}
        isInThisMonth={false}
      >
        <ForwardRef>
          1
        </ForwardRef>
        <ForwardRef />
      </ForwardRef>,
      "isInPeriod": false,
      "onClick": undefined,
      "style": Object {
        "color": "red",
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef>
            1
          </ForwardRef>,
          <ForwardRef />,
        ],
        "dayNumber": 1,
        "isHoliday": undefined,
        "isInThisMonth": false,
        "isSaturday": undefined,
        "isToday": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": 1,
          },
          "ref": null,
          "rendered": 1,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bxivhb",
              "isStatic": true,
              "lastClassName": "jDMdIj",
              "rules": Array [
                "
  margin-bottom: 20%;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bxivhb",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-htpNat",
              "isStatic": true,
              "lastClassName": "jKgTdy",
              "rules": Array [
                "
  width: inherit;
  height: 100%;
  justify-content: center;
  overflow-x: hidden;
  font-size: 80%;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-htpNat",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bwzfXH",
          "isStatic": false,
          "lastClassName": "eGiJSH",
          "rules": Array [
            "
  color: ",
            [Function],
            ";
  opacity: ",
            [Function],
            ";
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bwzfXH",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "lastClassName": "kdsAZh",
        "rules": Array [
          "
  display: inline-block;
  padding-left: 0.3%;
  padding-right: 0.3%;
  width: 13.6%;
  height: 100%;
  text-align: center;
  position: relative;
  font-weight: bold;
  background-color: ",
          [Function],
          ";
",
        ],
      },
      "displayName": "styled.td",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "td",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <ForwardRef
          dayNumber={1}
          isInThisMonth={false}
        >
          <ForwardRef>
            1
          </ForwardRef>
          <ForwardRef />
        </ForwardRef>,
        "isInPeriod": false,
        "onClick": undefined,
        "style": Object {
          "color": "red",
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef>
              1
            </ForwardRef>,
            <ForwardRef />,
          ],
          "dayNumber": 1,
          "isHoliday": undefined,
          "isInThisMonth": false,
          "isSaturday": undefined,
          "isToday": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": 1,
            },
            "ref": null,
            "rendered": 1,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bxivhb",
                "isStatic": true,
                "lastClassName": "jDMdIj",
                "rules": Array [
                  "
  margin-bottom: 20%;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bxivhb",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-htpNat",
                "isStatic": true,
                "lastClassName": "jKgTdy",
                "rules": Array [
                  "
  width: inherit;
  height: 100%;
  justify-content: center;
  overflow-x: hidden;
  font-size: 80%;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-htpNat",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bwzfXH",
            "isStatic": false,
            "lastClassName": "eGiJSH",
            "rules": Array [
              "
  color: ",
              [Function],
              ";
  opacity: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.div",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bwzfXH",
          "target": "div",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-bdVaJa",
          "isStatic": false,
          "lastClassName": "kdsAZh",
          "rules": Array [
            "
  display: inline-block;
  padding-left: 0.3%;
  padding-right: 0.3%;
  width: 13.6%;
  height: 100%;
  text-align: center;
  position: relative;
  font-weight: bold;
  background-color: ",
            [Function],
            ";
",
          ],
        },
        "displayName": "styled.td",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-bdVaJa",
        "target": "td",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Month renders with snapshot 1`] = `
<styled.td
  isInPeriod={false}
  style={Object {}}
>
  <styled.div
    dayNumber={1}
    isInThisMonth={false}
  >
    <styled.div>
      1
    </styled.div>
    <styled.div />
  </styled.div>
</styled.td>
`;

exports[`Month renders with snapshot prop dayNumber 1`] = `
<styled.td
  isInPeriod={false}
  style={Object {}}
>
  <styled.div
    dayNumber={20}
    isInThisMonth={false}
  >
    <styled.div>
      20
    </styled.div>
    <styled.div />
  </styled.div>
</styled.td>
`;

exports[`Month renders with snapshot prop for indicator type - date 1`] = `
<styled.td
  isInPeriod={false}
  style={Object {}}
>
  <styled.div
    dayNumber={1}
    isInThisMonth={false}
  >
    <styled.div>
      1
    </styled.div>
    <styled.div />
  </styled.div>
</styled.td>
`;

exports[`Month renders with snapshot prop for indicator type - end 1`] = `
<styled.td
  isInPeriod={false}
  style={Object {}}
>
  <styled.div
    img="end-period.png"
  >
    <styled.div>
      1
    </styled.div>
    <styled.div>
      끝
    </styled.div>
  </styled.div>
</styled.td>
`;

exports[`Month renders with snapshot prop for indicator type - select 1`] = `
<styled.td
  isInPeriod={false}
  style={Object {}}
>
  <styled.div
    dayNumber={1}
    isInThisMonth={false}
  >
    <styled.div>
      1
    </styled.div>
    <styled.div>
      선택
    </styled.div>
  </styled.div>
</styled.td>
`;

exports[`Month renders with snapshot prop for indicator type - start 1`] = `
<styled.td
  isInPeriod={false}
  style={Object {}}
>
  <styled.div
    img="start-period.png"
  >
    <styled.div>
      1
    </styled.div>
    <styled.div>
      시작
    </styled.div>
  </styled.div>
</styled.td>
`;

exports[`Month renders with snapshot prop isHoliday 1`] = `
<styled.td
  isInPeriod={false}
  style={Object {}}
>
  <styled.div
    dayNumber={1}
    isHoliday={true}
    isInThisMonth={false}
  >
    <styled.div>
      1
    </styled.div>
    <styled.div />
  </styled.div>
</styled.td>
`;

exports[`Month renders with snapshot prop isInPeriod 1`] = `
<styled.td
  isInPeriod={true}
  style={Object {}}
>
  <styled.div
    dayNumber={1}
    isInThisMonth={false}
  >
    <styled.div>
      1
    </styled.div>
    <styled.div />
  </styled.div>
</styled.td>
`;

exports[`Month renders with snapshot prop isInThisMonth 1`] = `
<styled.td
  isInPeriod={false}
  style={Object {}}
>
  <styled.div
    dayNumber={1}
    isInThisMonth={true}
  >
    <styled.div>
      1
    </styled.div>
    <styled.div />
  </styled.div>
</styled.td>
`;

exports[`Month renders with snapshot prop isSaturday 1`] = `
<styled.td
  isInPeriod={false}
  style={Object {}}
>
  <styled.div
    dayNumber={1}
    isInThisMonth={false}
    isSaturday={true}
  >
    <styled.div>
      1
    </styled.div>
    <styled.div />
  </styled.div>
</styled.td>
`;

exports[`Month renders with snapshot prop isToday 1`] = `
<Date
  cssObject={Object {}}
  dayNumber={1}
  handlers={
    Object {
      "handleDateClick": [Function],
    }
  }
  indicatorType="date"
  isInPeriod={false}
  isInThisMonth={false}
  isToday={true}
>
  <styled.td
    isInPeriod={false}
    style={Object {}}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "kdsAZh",
            "rules": Array [
              "
  display: inline-block;
  padding-left: 0.3%;
  padding-right: 0.3%;
  width: 13.6%;
  height: 100%;
  text-align: center;
  position: relative;
  font-weight: bold;
  background-color: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.td",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "td",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      isInPeriod={false}
      style={Object {}}
    >
      <td
        className="sc-bdVaJa kdsAZh"
        style={Object {}}
      >
        <styled.div
          dayNumber={1}
          isInThisMonth={false}
          isToday={true}
        >
          <StyledComponent
            dayNumber={1}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "eGiJSH",
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  opacity: ",
                    [Function],
                    ";
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isInThisMonth={false}
            isToday={true}
          >
            <div
              className="sc-bwzfXH eGiJSH"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bxivhb",
                        "isStatic": true,
                        "lastClassName": "jDMdIj",
                        "rules": Array [
                          "
  margin-bottom: 20%;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bxivhb",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-bxivhb jDMdIj"
                  >
                    1
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htpNat",
                        "isStatic": true,
                        "lastClassName": "jKgTdy",
                        "rules": Array [
                          "
  width: inherit;
  height: 100%;
  justify-content: center;
  overflow-x: hidden;
  font-size: 80%;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htpNat",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-htpNat jKgTdy"
                  />
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
      </td>
    </StyledComponent>
  </styled.td>
</Date>
`;

exports[`Month renders with snapshot prop isToday 2`] = `
<Date
  cssObject={Object {}}
  dayNumber={1}
  handlers={
    Object {
      "handleDateClick": [Function],
    }
  }
  indicatorType="date"
  isInPeriod={false}
  isInThisMonth={false}
  text="random"
>
  <styled.td
    isInPeriod={false}
    style={Object {}}
  >
    <StyledComponent
      forwardedComponent={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-bdVaJa",
            "isStatic": false,
            "lastClassName": "kdsAZh",
            "rules": Array [
              "
  display: inline-block;
  padding-left: 0.3%;
  padding-right: 0.3%;
  width: 13.6%;
  height: 100%;
  text-align: center;
  position: relative;
  font-weight: bold;
  background-color: ",
              [Function],
              ";
",
            ],
          },
          "displayName": "styled.td",
          "foldedComponentIds": Array [],
          "render": [Function],
          "styledComponentId": "sc-bdVaJa",
          "target": "td",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
      isInPeriod={false}
      style={Object {}}
    >
      <td
        className="sc-bdVaJa kdsAZh"
        style={Object {}}
      >
        <styled.div
          dayNumber={1}
          isInThisMonth={false}
        >
          <StyledComponent
            dayNumber={1}
            forwardedComponent={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": Array [],
                "componentStyle": ComponentStyle {
                  "componentId": "sc-bwzfXH",
                  "isStatic": false,
                  "lastClassName": "eGiJSH",
                  "rules": Array [
                    "
  color: ",
                    [Function],
                    ";
  opacity: ",
                    [Function],
                    ";
",
                  ],
                },
                "displayName": "styled.div",
                "foldedComponentIds": Array [],
                "render": [Function],
                "styledComponentId": "sc-bwzfXH",
                "target": "div",
                "toString": [Function],
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
            isInThisMonth={false}
          >
            <div
              className="sc-bwzfXH eGiJSH"
            >
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-bxivhb",
                        "isStatic": true,
                        "lastClassName": "jDMdIj",
                        "rules": Array [
                          "
  margin-bottom: 20%;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-bxivhb",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-bxivhb jDMdIj"
                  >
                    1
                  </div>
                </StyledComponent>
              </styled.div>
              <styled.div>
                <StyledComponent
                  forwardedComponent={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": Array [],
                      "componentStyle": ComponentStyle {
                        "componentId": "sc-htpNat",
                        "isStatic": true,
                        "lastClassName": "jKgTdy",
                        "rules": Array [
                          "
  width: inherit;
  height: 100%;
  justify-content: center;
  overflow-x: hidden;
  font-size: 80%;
",
                        ],
                      },
                      "displayName": "styled.div",
                      "foldedComponentIds": Array [],
                      "render": [Function],
                      "styledComponentId": "sc-htpNat",
                      "target": "div",
                      "toString": [Function],
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                >
                  <div
                    className="sc-htpNat jKgTdy"
                  >
                    random
                  </div>
                </StyledComponent>
              </styled.div>
            </div>
          </StyledComponent>
        </styled.div>
      </td>
    </StyledComponent>
  </styled.td>
</Date>
`;
